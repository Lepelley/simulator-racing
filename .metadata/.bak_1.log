!SESSION 2015-04-18 01:10:20.769 -----------------------------------------------
eclipse.buildId=4.4.2.M20150204-1700
java.version=1.7.0_75
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os linux -ws gtk -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file /home/veras/Dropbox/Java/.metadata/.bak_0.log
Created Time: 2015-04-18 01:13:40.062

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:40.062
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:40.063
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:40.063
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:40.064
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:40.064
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:41.111
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,00.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:41.111
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:41.112
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:41.112
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:41.112
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:41.112
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:41.136
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:41.140
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:41.255
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:41.258
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:42.666
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,0.5,2270.0,2335.0,0.5,2030.0,2090.0,0.5012,1860.0,1935.0,0.4,1495.0,1540.0,0.549,1380.0,1430.0,0.5103,1295.0,1340.0,0.50119,1220.0,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:42.669
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:42.671
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:42.674
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:42.675
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:42.675
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:45.219
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,0.5,2270.0,2335.0,0.5,2030.0,2090.0,0.5012,1860.0,1935.0,0.4,1495.0,1540.0,0.549,1380.0,1430.0,0.5103,1295.0,1340.0,0.50119,1220.0,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,00,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:45.220
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:45.220
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:45.220
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:45.220
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:45.221
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:45.240
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:45.240
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:45.263
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:45.263
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:46.261
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,0.5,2270.0,2335.0,0.5,2030.0,2090.0,0.5012,1860.0,1935.0,0.4,1495.0,1540.0,0.549,1380.0,1430.0,0.5103,1295.0,1340.0,0.50119,1220.0,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:46.262
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:46.263
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:46.263
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:46.263
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:46.264
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:46.285
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:46.286
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:46.694
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:46.694
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:48.296
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
org.eclipse.jdt.internal.compiler.problem.AbortCompilation: 
	at org.eclipse.jdt.internal.core.CancelableProblemFactory.createProblem(CancelableProblemFactory.java:30)
	at org.eclipse.jdt.internal.compiler.problem.ProblemHandler.createProblem(ProblemHandler.java:72)
	at org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(Compiler.java:595)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(CompilationUnitResolver.java:357)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1225)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:48.297
!MESSAGE Error in JDT Core during AST creation
!STACK 0
org.eclipse.jdt.internal.compiler.problem.AbortCompilation: 
	at org.eclipse.jdt.internal.core.CancelableProblemFactory.createProblem(CancelableProblemFactory.java:30)
	at org.eclipse.jdt.internal.compiler.problem.ProblemHandler.createProblem(ProblemHandler.java:72)
	at org.eclipse.jdt.internal.compiler.Compiler.handleInternalException(Compiler.java:595)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.handleInternalException(CompilationUnitResolver.java:357)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1225)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:49.302
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,0.5,2270.0,2335.0,0.5,2030.0,2090.0,0.5012,1860.0,1935.0,0.4,1495.0,1540.0,0.549,1380.0,1430.0,0.5103,1295.0,1340.0,0.50119,1220.0,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:49.308
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:49.308
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:49.309
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:49.313
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:49.314
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:49.335
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:49.337
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:50.852
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,0.5,2270.0,2335.0,0.5,2030.0,2090.0,0.5012,1860.0,1935.0,0.4,1495.0,1540.0,0.549,1380.0,1430.0,0.5103,1295.0,1340.0,0.50119,1220.0,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:50.853
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:50.853
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:50.854
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:50.854
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:50.855
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:50.871
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:50.871
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:52.381
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,0.5,2270.0,2335.0,0.5,2030.0,2090.0,0.5012,1860.0,1935.0,0.4,1495.0,1540.0,0.549,1380.0,1430.0,0.5103,1295.0,1340.0,0.50119,1220.0,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,0.1,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:52.382
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:52.382
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:52.382
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:52.382
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:52.383
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:53.431
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,2715.0,2740.0,0.701,2645.0,2700.0,0.501,2505.0,2555.0,0.5799,2380.0,2445.0,0.5,2270.0,2335.0,0.5,2030.0,2090.0,0.5012,1860.0,1935.0,0.4,1495.0,1540.0,0.549,1380.0,1430.0,0.5103,1295.0,1340.0,0.50119,1220.0,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:53.432
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:53.432
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:53.433
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:53.433
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:53.433
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:54.100
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:54.101
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:56.455
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.0,3030.0,0.59,2765.0,2835.0,0.71,271,1250.0,0.55305,1165.0,1200.0,0.5005,1080.0,1130.0,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:56.456
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:56.456
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:56.457
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:56.457
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:56.457
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:56.475
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:56.475
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:13:59.030
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.,0.51338,985.0,1050.0,0.4398,695.0,750.0,0.7007212,595.0,635.0,0.5769,535.0,576.0,0.5001,409.0,470.0,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:59.031
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:59.031
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:59.031
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:59.032
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:13:59.032
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:13:59.107
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:13:59.107
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:14:03.804
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.70,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4510.0,4570.0,0.81,4430.0,4480.0,0.8,4285.0,438,3860.0,3905.0,0.92,3785.0,3825.0,0.82,3695.0,3740.0,0.8,3410.0,3470.0,0.8,3325.0,3375.0,0.9,3125.0,3220.0,0.8,2975.0,3040.0,0.79,2775.0,2845.0,0.91,2725.0,2750.0,0.9,2655.0,2710.0,0.7,2515.0,2565.0,0.78,2390.0,2455.0,0.7,2280.0,2345.0,0.7,2040.0,2100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:03.811
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:03.811
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:03.812
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:14:03.812
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:03.812
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:03.864
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:14:03.889
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:09.051
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:14:09.067
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:14:10.047
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.70,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4512100.0,0.7,1870.0,1945.0,0.6,1505.0,1550.0,0.75,1390.0,1440.0,0.71,1305.0,1350.0,0.7,1230.0,1260.0,0.75,1175.0,1210.0,0.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:10.048
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:10.048
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:10.049
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:14:10.049
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:10.049
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:10.105
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:14:10.108
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:12.386
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:14:12.386
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:12.463
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2015-04-18 01:14:12.463
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1210)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2015-04-18 01:14:55.401
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package optimisation;

import java.util.Random;

public class GenereGenome implements GenomeGenerator<Double>{
	

	private double[] defaultparam;
	private double[] defaultparamSig;
	private double[] paramMax;
	private double[] paramMin;
	
	public GenereGenome(String str){				
		genereTab(str);
	}
	
	public Genome<Double> build() {
		Random r = new Random();
		Genome<Double> gen = new Genome<Double>(); // génome vide
        for(int i=0; i<defaultparam.length; i++){
           // parcours d'un tableau de valeurs par défaut
           // génération aléatoire gaussienne
            double d = r.nextGaussian() * defaultparamSig[i] + defaultparam[i];
            d = Math.min(d, paramMax[i]); // borne
            d = Math.max(d, paramMin[i]);
            gen.add(d);
        }
        return gen;
	}
	
	public double[] getSigma(){
		return defaultparamSig;
	}
	
	public double[] getDefault(){
		return defaultparam;
	}




	private void genereTab(String str){
		switch(str){
		case "1_safe.trk" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
		
		case "1_safe.trk-perso" :
			defaultparam = new double[] {2171.062533303095,2215.726331540125,0,1668.8318609631926,1707.4149682413135,0.641,1552.584413947107,1585.0966041985996,0.7020595343999513,1350.0859233134856,1403.2082587230266,0.499,1054.5864262509938,1101.0282848393679,0.554,614.7090977278539,645.7480133243064,0.69};
			   defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			   paramMax = new double[] {2181.062533303095,2225.726331540125,0.0,1678.8318609631926,1717.4149682413135,0.0,1562.584413947107,1595.0966041985996,0.9,1360.0859233134856,1413.2082587230266,0.0,1064.5864262509938,1111.0282848393679,0.0,624.7090977278539,655.7480133243064,0.0};
			   paramMin = new double[] {2161.062533303095,2205.726331540125,-0.35,1658.8318609631926,1697.4149682413135,-1.86,1542.584413947107,1575.0966041985996,0.5,1340.0859233134856,1393.2082587230266,-1.5,1044.5864262509938,1091.0282848393679,-0.65,604.7090977278539,635.7480133243064,-1.04};
			   break;
			
		case "2_safe.trk" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "2_safe.trk-perso" :
			defaultparam = new double[] {2573.988636715819,2621.236731701193,0.5429643404404481,2269.2248438717806,2319.284848414484,0.053843525329882846,1931.8050937405637,1969.2865021063178,0.34187584608693605,1758.0156068324502,1799.2955641576527,0.5596947736552216,1175.7769769115662,1230.8566372979544,0.5881707377814379,983.9967258876246,1030.124651174445,0.47137815402876815,723.6835051600034,765.627698186088,0.4722879371985862,544.3467016554547,594.5278080669322,0.6992720382265243,380.03997182747315,432.0736798987482,0.5337680361864233};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2583.988636715819,2631.236731701193,0.74,2279.2248438717806,2329.284848414484,0.0,1941.8050937405637,1979.2865021063178,0.54,1768.0156068324502,1809.2955641576527,0.76,1185.7769769115662,1240.8566372979544,0.79,993.9967258876246,1040.124651174445,0.67,733.6835051600034,775.627698186088,0.67,554.3467016554547,604.5278080669322,0.9,390.03997182747315,442.0736798987482,0.73};
			paramMin = new double[] {2563.988636715819,2611.236731701193,0.34,2259.2248438717806,2309.284848414484,-0.15,1921.8050937405637,1959.2865021063178,0.14,1748.0156068324502,1789.2955641576527,0.36,1165.7769769115662,1220.8566372979544,0.39,973.9967258876246,1020.124651174445,0.27,713.6835051600034,755.627698186088,0.27,534.3467016554547,584.5278080669322,0.5,370.03997182747315,422.0736798987482,0.33};
			break;
			
		case "3_safe.trk" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
				
		case "3_safe.trk-perso" :
			defaultparam = new double[] {3165.1463831725387,3206.2212259379153,0.6034720426316296,2925.0248822456756,2960.8402771475494,0.87899046770478,2494.834770312332,2541.7914938180365,0.6303378487659884,2232.5497527223756,2254.301066120064,0.7622231448567895,2107.2772037936056,2140.9335692289683,0.6705,1866.747981673031,1908.9544903718788,0.6931908232197898,1490.8365402480772,1540.9521141890307,0.5160035094164412,1368.102782923107,1430.027312596681,0.5934970352417953,1294.5583169036163,1330.5773742876697,0.6809373093428527,1092.9363554829138,1125.8158028362477,0.6752131062434676,823.9528776074379,878.9422591030605,0.5001,147.20666297475273,192.08740379400905,0.5314543726379678};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3175.1463831725387,3216.2212259379153,0.8,2935.0248822456756,2970.8402771475494,1.0,2504.834770312332,2551.7914938180365,0.83,2242.5497527223756,2264.301066120064,0.96,2117.2772037936056,2150.9335692289683,0.87,1876.747981673031,1918.9544903718788,0.89,1500.8365402480772,1550.9521141890307,0.72,1378.102782923107,1440.027312596681,0.79,1304.5583169036163,1340.5773742876697,0.88,1102.9363554829138,1135.8158028362477,0.88,833.9528776074379,888.9422591030605,0.7,157.20666297475273,202.08740379400905,0.73};
			paramMin = new double[] {3155.1463831725387,3196.2212259379153,0.4,2915.0248822456756,2950.8402771475494,0.68,2484.834770312332,2531.7914938180365,0.43,2222.5497527223756,2244.301066120064,0.56,2097.2772037936056,2130.9335692289683,0.47,1856.747981673031,1898.9544903718788,0.49,1480.8365402480772,1530.9521141890307,0.32,1358.102782923107,1420.027312596681,0.39,1284.5583169036163,1320.5773742876697,0.48,1082.9363554829138,1115.8158028362477,0.48,813.9528776074379,868.9422591030605,0.3,137.20666297475273,182.08740379400905,0.33};
			break;
			
		case "4_safe.trk" :
			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			break;
			
		case "4_safe.trk-perso" :
//			defaultparam = new double[] {3414.9896972081783,3434.2198279327304,0.6480768835665035,2811.766077807755,2854.5601442810294,0.6808304112490293,2035.5904699356684,2065.1078947811284,0.4271835011502705,1903.6789811123954,1950.938546175241,0.6101329059295908,1690.1370286384974,1704.9046007131005,1.0296669216800332,1413.082775797862,1446.6824872792502,0.4947559042401955,1384.5652299335916,1393.9930961623597,0.6587834658739922,929.7679559299602,967.7905727302143,0.6907802947618221,822.1479684035199,854.015611481038,0.6859944517271725,738.9896404095289,782.5519142774598,0.64600862769482,210.53443596865966,208.93240608549763,0.5154893393948};
//			defaultparamSig = new double[] {0.0,0.0,0.,0,0,0,0,0,0,0,0,0,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
//			paramMax = new double[] {3424.9896972081783,3444.2198279327304,0.85,2821.766077807755,2864.5601442810294,0.88,2045.5904699356684,2075.1078947811284,0.63,1913.6789811123954,1960.938546175241,0.81,1700.1370286384974,1714.9046007131005,1.0,1423.082775797862,1456.6824872792502,0.69,1394.5652299335916,1403.9930961623597,0.86,939.7679559299602,977.7905727302143,0.89,832.1479684035199,864.015611481038,0.89,748.9896404095289,792.5519142774598,0.85,220.53443596865966,218.93240608549763,0.72};
//			paramMin = new double[] {3404.9896972081783,3424.2198279327304,0.45,2801.766077807755,2844.5601442810294,0.48,2025.5904699356684,2055.1078947811284,0.23,1893.6789811123954,1940.938546175241,0.41,1680.1370286384974,1694.9046007131005,0.83,1403.082775797862,1436.6824872792502,0.29,1374.5652299335916,1383.9930961623597,0.46,919.7679559299602,957.7905727302143,0.49,812.1479684035199,844.015611481038,0.49,728.9896404095289,772.5519142774598,0.45,200.53443596865966,198.93240608549763,0.32};
			defaultparam = new double[] {3414.3267627623477,3432.3415181597584,0.6734402768656861,2810.0108707248114,2855.825824129949,0.7000422398218643,2047.0252314991951,2085.6322745442244,0.5862966566503773,1888.6463042185462,1942.4187937545705,0.5318697979595362,1448.0030057554288,1476.6574340800817,0.19595386321355307,1381.867851752053,1424.1495946526977,0.6096374431202681,948.9955381291275,982.5459423099044,0.3485801609485857,834.9246008893442,872.5979775091894,0.7044665012776894,744.0492601916892,781.3618462851597,0.45960129271209993};
			defaultparamSig = new double[] {7.0,7.0,0.1,4.0,4.0,0.1,3.0,3.0,0.05,2.0,2.0,0.01,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3424.3267627623477,3442.3415181597584,0.87,2820.0108707248114,2865.825824129949,0.9,2057.025231499195,2095.6322745442244,0.79,1898.6463042185462,1952.4187937545705,0.73,1458.0030057554288,1486.6574340800817,0.4,1391.867851752053,1434.1495946526977,0.81,958.9955381291275,992.5459423099044,0.55,844.9246008893442,882.5979775091894,0.9,754.0492601916892,791.3618462851597,0.66};
			paramMin = new double[] {3404.3267627623477,3422.3415181597584,0.47,2800.0108707248114,2845.825824129949,0.5,2037.0252314991951,2075.6322745442244,0.39,1878.6463042185462,1932.4187937545705,0.33,1438.0030057554288,1466.6574340800817,0.0,1371.867851752053,1414.1495946526977,0.41,938.9955381291275,972.5459423099044,0.15,824.9246008893442,862.5979775091894,0.5,734.0492601916892,771.3618462851597,0.26};
			break;
			
		case "5_safe.trk" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "5_safe.trk-perso" :
			defaultparam = new double[] {1223.488927657597,1274.7810513259396,0.5328090249014206,512.9707527918433,545.1192114668505,0.3653779371476178,326.95595086874636,331.5564160486161,0.8880831044550338,258.8802639690028,309.683651577752,0.7133838245113463};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1233.488927657597,1284.7810513259396,0.73,522.9707527918433,555.1192114668505,0.57,336.95595086874636,341.5564160486161,1.0,268.8802639690028,319.683651577752,0.91};
			paramMin = new double[] {1213.488927657597,1264.7810513259396,0.33,502.9707527918433,535.1192114668505,0.17,316.95595086874636,321.5564160486161,0.69,248.88026396900278,299.683651577752,0.51};
			break;
			
		case "6_safe.trk" :
			defaultparam = new double[] {1220.0,1290.0,0.79,910.0,990.0,0.75};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1230.0,1300.0,0.99,920.0,1000.0,0.95};
			paramMin = new double[] {1210.0,1280.0,0.59,900.0,980.0,0.55};
			break;
			
		case "6_safe.trk-perso" :
			defaultparam = new double[] {1241.6684114125496,1288.3199437900805,0.8020570562655581,948.7322268676743,995.5637539892292,0.7084714746742877};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1251.6684114125496,1298.3199437900805,1.0,958.7322268676743,1005.5637539892292,0.91};
			paramMin = new double[] {1231.6684114125496,1278.3199437900805,0.6,938.7322268676743,985.5637539892292,0.51};
			break;	
		case "7_safe.trk" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};

			break;
			
		case "7_safe.trk-perso" :
			defaultparam = new double[] {763.0372728604641,812.0835160160184,0.8053308405033391,435.38643344367654,466.33943689831716,0.5721296750396974};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {773.0372728604641,822.0835160160184,1.0,445.38643344367654,476.33943689831716,0.77};
			paramMin = new double[] {753.0372728604641,802.0835160160184,0.61,425.38643344367654,456.33943689831716,0.37};
			break;
				
		case "8_safe.trk" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "8_safe.trk-perso" :
			defaultparam = new double[] {1583.884782600067,1621.2473784856722,0.6886736929263721,1516.5117442741173,1568.984416074957,0.7067900421530797,1332.1998492398138,1377.6193219295008,0.8040256219896251,1119.045437866054,1160.1477066483833,0.6255740741130575,757.3705085437595,786.33043931704,0.6975741095511402,625.1587717438596,662.3861105815683,0.7098367419322509,136.5056057767487,179.6873854426462,0.7892541603470721,39.82271194477145,72.51935473717123,0.7143549997477856};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1593.884782600067,1631.2473784856722,0.89,1526.5117442741173,1578.984416074957,0.91,1342.1998492398138,1387.6193219295008,1.0,1129.045437866054,1170.1477066483833,0.83,767.3705085437595,796.33043931704,0.9,635.1587717438596,672.3861105815683,0.91,146.5056057767487,189.6873854426462,0.99,49.82271194477145,82.51935473717123,0.91};
			paramMin = new double[] {1573.884782600067,1611.2473784856722,0.49,1506.5117442741173,1558.984416074957,0.51,1322.1998492398138,1367.6193219295008,0.6,1109.045437866054,1150.1477066483833,0.43,747.3705085437595,776.33043931704,0.5,615.1587717438596,652.3861105815683,0.51,126.5056057767487,169.6873854426462,0.59,29.82271194477145,62.51935473717123,0.51};
			break;
			
		case "aufeu.trk" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
		case "aufeu.trk-perso" :
			defaultparam = new double[] {15.995918697818407,82.44330099327281,0.26325063588199027,-2.0718352057931675,10.436020404611913,0.17680328310492407,32.1366097125668,-9.815739426192746,-0.2706100951851284};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {25.995918697818407,92.44330099327281,0.46,7.9281647942068325,20.436020404611913,0.0,42.1366097125668,0.18426057380725425,0.0};
			paramMin = new double[] {5.995918697818407,72.44330099327281,0.06,-12.071835205793167,0.43602040461191294,-0.02,22.136609712566802,-19.815739426192746,-0.47};
			break;
			
			
		case "bond_safe.trk" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "bond_safe.trk-perso" :
			defaultparam = new double[] {835.4023044339797,857.8059536461592,0.609183916202736,666.8491219568638,722.6536648854518,0.7121777398350074,314.97856345039924,361.8084899104696,0.6023710056976249};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {845.4023044339797,867.8059536461592,0.81,676.8491219568638,732.6536648854518,0.91,324.97856345039924,371.8084899104696,0.8};
			paramMin = new double[] {825.4023044339797,847.8059536461592,0.41,656.8491219568638,712.6536648854518,0.51,304.97856345039924,351.8084899104696,0.4};
			break;
			
		case "Een2.trk" :
			
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;
		case "Een2.trk-perso" :
			defaultparam = new double[] {1431.5583132506392,1475.7651347240185,0.7162511855854374,1344.6707074779656,1391.4984427822094,0.7062681802340303,1030.6870626698894,1077.6066245079949,0.6240220223025127,800.2836544521131,836.3776814811164,0.6937054150892181,621.6857592465051,662.2935984484151,0.9517203670038206,227.04696037462006,276.04337019663893,0.5887339450648027,60.40535821977477,116.99542789600773,0.5097254919929514};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1441.5583132506392,1485.7651347240185,0.92,1354.6707074779656,1401.4984427822094,0.91,1040.6870626698894,1087.6066245079949,0.82,810.2836544521131,846.3776814811164,0.89,631.6857592465051,672.2935984484151,1.0,237.04696037462006,286.04337019663893,0.79,70.40535821977477,126.99542789600773,0.71};
			paramMin = new double[] {1421.5583132506392,1465.7651347240185,0.52,1334.6707074779656,1381.4984427822094,0.51,1020.6870626698894,1067.6066245079949,0.42,790.2836544521131,826.3776814811164,0.49,611.6857592465051,652.2935984484151,0.75,217.04696037462006,266.04337019663893,0.39,50.40535821977477,106.99542789600773,0.31};
			break;	
			
		case "labymod.trk" :
			defaultparam = new double[] {2965.70,0.625597,280.0,340.0,0.5481,159.0,235.0,0.62615};
			defaultparamSig = new double[] {7.0,7.0,0.1,70.0,.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {4512100.0,0.7,999999999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,90.7,1090.0,1140.0,0.71,995.0,1060.0,0.64,705.0,760.0,0.9,605.0,645.0,0.78,545.0,586.0,0.7,419.0,480.0,0.83,290.0,350.0,0.75,169.0,245.0,0.83};
			paramMin = new double[] {4490.4,3840.0,3885.0,0.52,3765.0,3805.0,0.42,3675.0,3720.0,0.4,3390.0,3450.0,0.4,3305.0,3355.0,0.5,3105.0,3200.0,0.4,2955.0,3020.0,0.39,2755.0,2825.0,0.51,2705.0,2730.0,0.5,2635.0,2690.0,0.3,2495.0,2545.0,0.38,2370.0,2435.0,0.3,2260.0,2325.0,0.3,2020.0,2080.0,0.3,1850.0,1925.0,0.2,1485.0,1530.0,0.35,1370.0,1420.0,0.31,1285.0,1330.0,0.3,1210.0,1240.0,0.35,1155.0,1190.0,0.3,1070.0,1120.0,0.31,975.0,1040.0,0.24,685.0,740.0,0.5,585.0,625.0,0.38,525.0,566.0,0.3,399.0,460.0,0.43,270.0,330.0,0.35,149.0,225.0,0.43};

			break;
			
		case "laybmod.trk-perso" :
		break;
			
		case "labyperso.trk" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "labyperso.trk-perso" :
			defaultparam = new double[] {5180.0,5200.0,0.5,5070.0,5115.0,0.56,4995.0,5035.0,0.55,4920.0,4950.0,0.45,4785.0,4820.0,0.65,4705.0,4795.0,0.6,4625.0,4670.0,0.5,4550.0,4590.0,0.55,4455.0,4500.0,0.6,4285.0,4330.0,0.55,4190.0,4265.0,0.6,4040.0,4110.0,0.65,3945.0,3995.0,0.6,3875.0,3935.0,0.6003,3750.0,3790.0,0.49,3605.0,3655.0,0.7,3365.0,3410.0,0.6,3265.0,3320.0,0.6,3135.0,3200.0,0.5,3080.0,3115.0,0.69,2930.0,2980.0,0.59,2745.0,2805.0,0.4,2670.0,2730.0,0.5,2525.0,2590.0,0.704,2475.0,2520.0,0.5,2380.0,2430.0,0.49,2190.0,2250.0,0.51,2060.0,2115.0,0.4301,1720.0,1765.0,0.6,1600.0,1650.0,0.6,1530.0,1575.0,0.618,1435.0,1510.0,0.6148,1340.0,1390.0,0.811,1270.0,1330.0,0.6,1150.0,1220.0,0.615,855.0,895.0,0.716,715.0,770.0,0.6,665.0,700.0,0.65,470.0,515.0,0.625,330.0,380.0,0.711,270.0,315.0,0.626,160.0,200.0,0.609};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {5190.0,5210.0,0.7,5080.0,5125.0,0.76,5005.0,5045.0,0.75,4930.0,4960.0,0.65,4795.0,4830.0,0.85,4715.0,4805.0,0.8,4635.0,4680.0,0.7,4560.0,4600.0,0.75,4465.0,4510.0,0.8,4295.0,4340.0,0.75,4200.0,4275.0,0.8,4050.0,4120.0,0.85,3955.0,4005.0,0.8,3885.0,3945.0,0.8,3760.0,3800.0,0.69,3615.0,3665.0,0.9,3375.0,3420.0,0.8,3275.0,3330.0,0.8,3145.0,3210.0,0.7,3090.0,3125.0,0.89,2940.0,2990.0,0.79,2755.0,2815.0,0.6,2680.0,2740.0,0.7,2535.0,2600.0,0.9,2485.0,2530.0,0.7,2390.0,2440.0,0.69,2200.0,2260.0,0.71,2070.0,2125.0,0.63,1730.0,1775.0,0.8,1610.0,1660.0,0.8,1540.0,1585.0,0.82,1445.0,1520.0,0.81,1350.0,1400.0,1.0,1280.0,1340.0,0.8,1160.0,1230.0,0.82,865.0,905.0,0.92,725.0,780.0,0.8,675.0,710.0,0.85,480.0,525.0,0.83,340.0,390.0,0.91,280.0,325.0,0.83,170.0,210.0,0.81};
			paramMin = new double[] {5170.0,5190.0,0.3,5060.0,5105.0,0.36,4985.0,5025.0,0.35,4910.0,4940.0,0.25,4775.0,4810.0,0.45,4695.0,4785.0,0.4,4615.0,4660.0,0.3,4540.0,4580.0,0.35,4445.0,4490.0,0.4,4275.0,4320.0,0.35,4180.0,4255.0,0.4,4030.0,4100.0,0.45,3935.0,3985.0,0.4,3865.0,3925.0,0.4,3740.0,3780.0,0.29,3595.0,3645.0,0.5,3355.0,3400.0,0.4,3255.0,3310.0,0.4,3125.0,3190.0,0.3,3070.0,3105.0,0.49,2920.0,2970.0,0.39,2735.0,2795.0,0.2,2660.0,2720.0,0.3,2515.0,2580.0,0.5,2465.0,2510.0,0.3,2370.0,2420.0,0.29,2180.0,2240.0,0.31,2050.0,2105.0,0.23,1710.0,1755.0,0.4,1590.0,1640.0,0.4,1520.0,1565.0,0.42,1425.0,1500.0,0.41,1330.0,1380.0,0.61,1260.0,1320.0,0.4,1140.0,1210.0,0.42,845.0,885.0,0.52,705.0,760.0,0.4,655.0,690.0,0.45,460.0,505.0,0.43,320.0,370.0,0.51,260.0,305.0,0.43,150.0,190.0,0.41};
			break;
			
		case "perso.trk" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "perso.trk-perso" :
			defaultparam = new double[] {3605.0,3650.0,0.6,3535.0,3565.0,0.7,3370.0,3425.0,0.5,3265.0,3310.0,0.55,3165.0,3210.0,0.4,3020.0,3080.0,0.7,2930.0,2970.0,0.7,2730.0,2790.0,0.7,2650.0,2690.0,0.7,2485.0,2535.0,0.5,2390.0,2430.0,0.5,2370.0,2390.0,0.5,2320.0,2350.0,0.6,2250.0,2270.0,0.7,2200.0,2250.0,0.5,2130.0,2170.0,0.5,1955.0,2000.0,0.6,1885.0,1915.0,0.6,1815.0,1845.0,0.7,1745.0,1795.0,0.5,1695.0,1710.0,0.6,1645.0,1695.0,0.515311,1570.0,1612.0,0.5,1490.0,1530.0,0.6,1440.0,1470.0,0.6,1395.0,1425.0,0.6,1355.0,1375.0,0.7,1285.0,1335.0,0.7,1100.0,1150.0,0.5,1060.0,1100.0,0.5,1010.0,1050.0,0.5,875.0,930.0,0.57047,840.0,870.0,0.5,725.0,775.0,0.61388,670.0,725.0,0.7155,530.0,565.0,0.7,460.0,490.0,0.7083,245.0,290.0,0.557,160.0,210.0,0.53615};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {3615.0,3660.0,0.8,3545.0,3575.0,0.9,3380.0,3435.0,0.7,3275.0,3320.0,0.75,3175.0,3220.0,0.6,3030.0,3090.0,0.9,2940.0,2980.0,0.9,2740.0,2800.0,0.9,2660.0,2700.0,0.9,2495.0,2545.0,0.7,2400.0,2440.0,0.7,2380.0,2400.0,0.7,2330.0,2360.0,0.8,2260.0,2280.0,0.9,2210.0,2260.0,0.7,2140.0,2180.0,0.7,1965.0,2010.0,0.8,1895.0,1925.0,0.8,1825.0,1855.0,0.9,1755.0,1805.0,0.7,1705.0,1720.0,0.8,1655.0,1705.0,0.72,1580.0,1622.0,0.7,1500.0,1540.0,0.8,1450.0,1480.0,0.8,1405.0,1435.0,0.8,1365.0,1385.0,0.9,1295.0,1345.0,0.9,1110.0,1160.0,0.7,1070.0,1110.0,0.7,1020.0,1060.0,0.7,885.0,940.0,0.77,850.0,880.0,0.7,735.0,785.0,0.81,680.0,735.0,0.92,540.0,575.0,0.9,470.0,500.0,0.91,255.0,300.0,0.76,170.0,220.0,0.74};
			paramMin = new double[] {3595.0,3640.0,0.4,3525.0,3555.0,0.5,3360.0,3415.0,0.3,3255.0,3300.0,0.35,3155.0,3200.0,0.2,3010.0,3070.0,0.5,2920.0,2960.0,0.5,2720.0,2780.0,0.5,2640.0,2680.0,0.5,2475.0,2525.0,0.3,2380.0,2420.0,0.3,2360.0,2380.0,0.3,2310.0,2340.0,0.4,2240.0,2260.0,0.5,2190.0,2240.0,0.3,2120.0,2160.0,0.3,1945.0,1990.0,0.4,1875.0,1905.0,0.4,1805.0,1835.0,0.5,1735.0,1785.0,0.3,1685.0,1700.0,0.4,1635.0,1685.0,0.32,1560.0,1602.0,0.3,1480.0,1520.0,0.4,1430.0,1460.0,0.4,1385.0,1415.0,0.4,1345.0,1365.0,0.5,1275.0,1325.0,0.5,1090.0,1140.0,0.3,1050.0,1090.0,0.3,1000.0,1040.0,0.3,865.0,920.0,0.37,830.0,860.0,0.3,715.0,765.0,0.41,660.0,715.0,0.52,520.0,555.0,0.5,450.0,480.0,0.51,235.0,280.0,0.36,150.0,200.0,0.34};
			break;
			
		case "t2009.trk" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t2009.trk-perso" :
			defaultparam = new double[] {2640.0,2670.0,0.6,2500.0,2600.0,0.45,2450.0,2485.0,0.2,2265.0,2380.0,0.65,2240.0,2265.0,0.5,2050.0,2150.0,0.5,2000.0,2050.0,0.5,1950.0,2000.0,0.4,1900.0,1950.0,0.5,1855.0,1890.0,0.45,1775.0,1795.0,0.81505,1730.0,1775.0,0.445,1675.0,1710.0,0.4725,1640.0,1665.0,0.45,820.0,875.0,0.45,755.0,785.0,0.501,590.0,630.0,0.657,520.0,590.0,0.5,480.0,510.0,0.4,380.0,420.0,0.4,350.0,375.0,0.5,315.0,350.0,0.3,245.0,285.0,0.5,175.0,220.0,0.696,125.0,175.0,0.45,80.0,110.0,0.63};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {2650.0,2680.0,0.8,2510.0,2610.0,0.65,2460.0,2495.0,0.4,2275.0,2390.0,0.85,2250.0,2275.0,0.7,2060.0,2160.0,0.7,2010.0,2060.0,0.7,1960.0,2010.0,0.6,1910.0,1960.0,0.7,1865.0,1900.0,0.65,1785.0,1805.0,1.0,1740.0,1785.0,0.65,1685.0,1720.0,0.67,1650.0,1675.0,0.65,830.0,885.0,0.65,765.0,795.0,0.7,600.0,640.0,0.86,530.0,600.0,0.7,490.0,520.0,0.6,390.0,430.0,0.6,360.0,385.0,0.7,325.0,360.0,0.5,255.0,295.0,0.7,185.0,230.0,0.9,135.0,185.0,0.65,90.0,120.0,0.83};
			paramMin = new double[] {2630.0,2660.0,0.4,2490.0,2590.0,0.25,2440.0,2475.0,0.0,2255.0,2370.0,0.45,2230.0,2255.0,0.3,2040.0,2140.0,0.3,1990.0,2040.0,0.3,1940.0,1990.0,0.2,1890.0,1940.0,0.3,1845.0,1880.0,0.25,1765.0,1785.0,0.62,1720.0,1765.0,0.25,1665.0,1700.0,0.27,1630.0,1655.0,0.25,810.0,865.0,0.25,745.0,775.0,0.3,580.0,620.0,0.46,510.0,580.0,0.3,470.0,500.0,0.2,370.0,410.0,0.2,340.0,365.0,0.3,305.0,340.0,0.1,235.0,275.0,0.3,165.0,210.0,0.5,115.0,165.0,0.25,70.0,100.0,0.43};
			break;
			
		case "t260_safe.trk" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
		
		case "t260_safe.trk-perso" :
			defaultparam = new double[] {1612.5103480462487,1665.7162105896807,0.5927611265052872,1324.691229714225,1355.508299717963,0.5605511538236049,1266.7741192728208,1304.723233323826,0.6124854606672863,1217.0866911950395,1247.167604994208,0.9862763788024345,925.0,978.0118483001713,0.48953057086617324,730.8239578623258,779.210446914229,0.7170041934859331,625.7086495695839,663.5760258393886,0.7053181847296358,436.1693314833114,481.56251803202565,0.7035256254623243,326.92861007868714,374.1653661750272,1.025937268043568,280.1101701102649,324.5966982607074,0.7857196739049761,185.81870295252529,217.2293104152369,0.7079292303657371,14.258087324313982,62.82956987704406,-0.06368600396928197};
			defaultparamSig = new double[] {7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1,7.0,7.0,0.1};
			paramMax = new double[] {1622.5103480462487,1675.7162105896807,0.79,1334.691229714225,1365.508299717963,0.76,1276.7741192728208,1314.723233323826,0.81,1227.0866911950395,1257.167604994208,1.0,935.0,988.0118483001713,0.69,740.8239578623258,789.210446914229,0.92,635.7086495695839,673.5760258393886,0.91,446.1693314833114,491.56251803202565,0.9,336.92861007868714,384.1653661750272,1.0,290.1101701102649,334.5966982607074,0.99,195.81870295252529,227.2293104152369,0.91,24.258087324313983,72.82956987704407,0.0};
			paramMin = new double[] {1602.5103480462487,1655.7162105896807,0.39,1314.691229714225,1345.508299717963,0.36,1256.7741192728208,1294.723233323826,0.41,1207.0866911950395,1237.167604994208,0.79,915.0,968.0118483001713,0.29,720.8239578623258,769.210446914229,0.52,615.7086495695839,653.5760258393886,0.51,426.1693314833114,471.56251803202565,0.5,316.92861007868714,364.1653661750272,0.83,270.1101701102649,314.5966982607074,0.59,175.81870295252529,207.2293104152369,0.51,4.258087324313982,52.82956987704406,-0.26};
			break;
			
		default :
			defaultparam = new double[] {};
			defaultparamSig = new double[] {};
			paramMax = new double[] {};
			paramMin = new double[] {};
		}
		
	}


}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2015-04-18 01:14:55.402
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:249)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	... 19 more
Caused by: java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:55.404
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2015-04-18 01:14:55.404
!MESSAGE info cannot be null
!STACK 0
java.lang.IllegalArgumentException: info cannot be null
	at org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.addStackItem(StackMapFrame.java:81)
	at org.eclipse.jdt.internal.compiler.ClassFile.traverse(ClassFile.java:5600)
	at org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(ClassFile.java:4312)
	at org.eclipse.jdt.internal.compiler.ClassFile.completeCodeAttribute(ClassFile.java:1387)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:338)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:270)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:566)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:635)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:368)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:935)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:197)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:194)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)
