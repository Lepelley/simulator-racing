package main;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import optimisation.GenereGenome;
import optimisation.Genome;
import dijkstra.Dijkstra;
import simulation.Simulation;
import strategy.Strategy;
import strategy.StrategyDebile;
import strategy.StrategyGenome;
import strategy.StrategyRadarDijkstra;
import tools.DessinTools;
import IHM.Fenetre;
import IHM.ImagePerso;
import Circuit.Circuit;
import Circuit.CircuitFactoryFromFile;
import IHM.Swing.IHMSwing;
import IHM.Swing.ManageIHM;
import Radar.Radar;
import Radar.RadarDijkstra;
import Voiture.Voiture;
import Voiture.VoitureException;
import Voiture.VoitureFactory;

public class MainIHM {
	public static void main(String[] args) throws VoitureException, IOException {
		
		Circuit  circuit = CircuitFactoryFromFile.build("Tracks/bond_safe.trk");
		
		Voiture v = VoitureFactory.build(circuit.getPointDepart(), circuit.getDirectionDepart());
		
		
		Dijkstra dij =  new Dijkstra(circuit) ;
		Radar r = new RadarDijkstra(v, circuit, dij.getMatrice());
		
		GenereGenome gen = new GenereGenome();
		Genome<Double> g = new Genome<Double>();
		for(double x:gen.getDefault()){
			g.add(x);
		}
//		Strategy s = new StrategyGenome(v, r, g);
//		Simulation sim = new Simulation (circuit, v, s);
		
		
		Strategy s = new StrategyRadarDijkstra(v, r);
		Strategy sd = new StrategyDebile(s,v);
		Simulation sim = new Simulation (circuit, v, sd);

		

	
		IHMSwing ihm = new IHMSwing();
		ManageIHM.manageIHM(ihm, circuit, v);
		
		sim.add(ihm);
		
		@SuppressWarnings("unused")
		Fenetre fen = new Fenetre(sim, ihm);

	}
}