package main;

import geometrie.Vecteur;

import java.awt.Color;
import java.io.FileInputStream;
import java.io.IOException;

import dijkstra.Dijkstra;
import simulation.Simulation;
import strategy.Strategy;
import strategy.StrategyArrivee;
import strategy.StrategyOP;
import strategy.StrategyPointToPoint;
import strategy.StrategyPrudente;
import strategy.StrategyRadarDijkstra;
import strategy.StrategySelector;
import strategy.selector.SelectorArrivee;
import strategy.selector.SelectorDijkstra;
import strategy.selector.SelectorOP;
import strategy.selector.SelectorPointToPoint;
import strategy.selector.SelectorPrudent;
import tools.DessinTools;
import tools.ToolsFichiers;
import Radar.Radar;
import Radar.RadarDijkstra;
import Voiture.Voiture;
import Voiture.VoitureException;
import Voiture.VoitureFactory;
import Circuit.Circuit;
import Circuit.CircuitFactoryFromFile;


public class MainConsole {
	
	public static void main(String[] args) throws VoitureException, IOException {
		
		String fichier = Fonctions.selectionnerCircuit();
		
		Circuit  circuit = CircuitFactoryFromFile.build(new FileInputStream("Tracks/" + fichier));
		
		Voiture v = VoitureFactory.build(circuit.getPointDepart(), circuit.getDirectionDepart());
		
		//----------------------------------------------SELECTOR---------------------------------------------------------
		
		Dijkstra dij =  new Dijkstra(circuit) ;
		Radar r = new RadarDijkstra(v, circuit, dij.getMatrice());
		Strategy sDij = new StrategyRadarDijkstra(v, r);
		
		Vecteur[] tabVec = {new Vecteur(389.0,714.0)};
		Strategy sP2P = new StrategyPointToPoint(circuit, v, tabVec, dij.getMatrice());
		
		Strategy endLine = new StrategyArrivee(circuit, v);
		
		//ihm.add(new RadarObserver(v,r));
		Strategy OP = new StrategyOP(v,r);
		
		Strategy prudente = new StrategyPrudente();
		
		StrategySelector s = new StrategySelector();
		s.add(prudente, new SelectorPrudent(v, circuit));
		s.add(endLine, new SelectorArrivee(circuit, v));
		s.add(sP2P, new SelectorPointToPoint(circuit, v, tabVec));
		s.add(OP,new SelectorOP());
		s.add(sDij, new SelectorDijkstra());
		
		//-----------------------------------------------------------------------------------------------------------------
		
		Simulation sim = new Simulation (circuit, v, s);
		
		Thread t = new Thread(){
		public void run(){
			try{
				sim.play();
			} catch (VoitureException e1){
				e1.printStackTrace();
			}
		}};
		t.start();
	
		ToolsFichiers.saveListeCommande(sim.getRecord(), "Logs/"+fichier.substring(0,fichier.length()-4)+"-log");
		DessinTools.dessinerTrajet(fichier.substring(0,fichier.length()-4), circuit, sim.getList() , Color.black);
		//DessinTools.dessinerDijkstra(fichier.substring(0,fichier.length()-4),circuit,dij.getMax(), new Color(0,153,255));

	}
}

