package tools;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.FileNotFoundException;

import javax.swing.BoxLayout;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;

import Voiture.Voiture;
import Voiture.VoitureFactory;
import simulation.Simulation;
import Circuit.Circuit;
import Circuit.CircuitFactoryFromFile;
import IHM.CircuitObserver;
import IHM.Swing.IHMSwing;
import IHM.Swing.ManageIHM;

public class Fenetre extends JFrame{
	
	private IHMSwing ihm;
	private JComboBox<String> circuitBox = new JComboBox<String>();
	Simulation sim;
	Circuit circuit;
	Voiture v;
	
	public Fenetre(Simulation sim) throws FileNotFoundException{
		this.setSize(1920,1080);
		this.setPreferredSize(new Dimension(1920, 1024));
		this.setLocation(0, 0);
		this.setResizable(false);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.sim = sim;
		this.ihm = sim.getIhm();
		
	
		
		circuitBox.setPreferredSize(new Dimension(100, 20));
	    circuitBox.addItem("Option 1");
	    circuitBox.addItem("Jouer");
	    circuitBox.addItem("Stop");
	    circuitBox.addItem("Circuit 2");
	    circuitBox.addActionListener(new CircuitBoxListener());
	    
		JPanel gauche = new JPanel();
		gauche.setMinimumSize(new Dimension(((this.getWidth()-768)/2)-5,this.getHeight()));
		gauche.setPreferredSize(new Dimension(((this.getWidth()-768)/2)-5,this.getHeight()));
		gauche.setBackground(Color.yellow);
		gauche.add(circuitBox);
		
		JPanel droite = new JPanel();
		droite.setMinimumSize(new Dimension(((this.getWidth()-768)/2)-5,this.getHeight()));
		droite.setPreferredSize(new Dimension(((this.getWidth()-768)/2)-5,this.getHeight()));
		droite.setBackground(Color.red);
		
		JPanel fond = new JPanel();
		fond.setBackground(Color.blue);
//		fond.setSize(new Dimension(this.getWidth(),this.getHeight()));
//		fond.setPreferredSize(new Dimension(this.getWidth(),this.getHeight()));
		GridBagLayout layout = new GridBagLayout();
		fond.setLayout(layout);
		
		
		JPanel orangeLayout = new JPanel();
		orangeLayout.setMinimumSize(new Dimension(5,this.getHeight()));
		orangeLayout.setPreferredSize(new Dimension(5,this.getHeight()));
		orangeLayout.setBackground(Color.orange);

		
		JPanel orangeLayout2 = new JPanel();
		orangeLayout2.setMinimumSize(new Dimension(5,this.getHeight()));
		orangeLayout2.setPreferredSize(new Dimension(5,this.getHeight()));
		orangeLayout2.setBackground(Color.orange);
		
		GridBagConstraints gc = new GridBagConstraints();
		gc.fill = GridBagConstraints.BOTH;
		gc.gridx = 0;
		gc.gridy = 0;
		gc.gridheight = 1;
		gc.gridwidth = 1;
		fond.add(gauche);
		
		gc.gridx = 1;
		fond.add(orangeLayout);
		gc.gridx = 2;
		fond.add(ihm);
		gc.gridx = 3;
		fond.add(orangeLayout2);
		gc.gridwidth = GridBagConstraints.REMAINDER;
		gc.gridx = 4;
		fond.add(droite);
		
		this.setContentPane(fond);
		
		
		this.pack();
		this.setVisible(true);
	}

	
	class CircuitBoxListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent arg0) {
			 switch(circuitBox.getSelectedIndex()){
			 case 0 :
				 System.out.println("2");
				 break;
			 case 1 :
				 sim.setAnimated(true);
				 sim.jouer();
				 System.out.println("1");
				 break;
			 case 2 :
				 sim.setAnimated(false);
				 break;
			 case 3 :
				 sim.setAnimated(false);
				 try {
					circuit = CircuitFactoryFromFile.build("Tracks/2_safe.trk");
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				 v = VoitureFactory.build(circuit.getPointDepart(), circuit.getDirectionDepart());
				 sim.setC(circuit);
				 sim.setV(v);
				 sim.setIhm(ManageIHM.manageIHM(sim.getC(),sim.getV()));
				 sim.jouer();
				 break;
			 default :
				System.out.println("lol");	 
			 }
			
		}
		
	}
}
