package simulation;

import geometrie.Vecteur;

import java.util.ArrayList;

import strategy.Strategy;
import tools.TerrainTools;
import Voiture.Commande;
import Voiture.Voiture;
import Voiture.VoitureException;
import Circuit.Circuit;
import Circuit.Terrain;
import IHM.UpdateEventListener;
import IHM.UpdateEventSender;
import IHM.Swing.IHMSwing;

public class Simulation implements UpdateEventSender{

	private ArrayList<Vecteur> trajet = new ArrayList<Vecteur>();
	private Circuit c;
	private Voiture v;
	private Strategy s;
	private ArrayList<Commande> record = new ArrayList<Commande>();
	private ArrayList<UpdateEventListener> list = new ArrayList<UpdateEventListener>();
	private IHMSwing ihm;
	
	public Simulation(Circuit c, Voiture v, Strategy s){
		this.c=c;
		this.v=v;
		this.s=s;
		
		
	}
	
	public int play() throws VoitureException{
		int i=0;
		while(TerrainTools.isRunnable(c.getTerrain((int)v.getPosition().getX(), (int)v.getPosition().getY())) && c.getTerrain((int)v.getPosition().getX(),(int)v.getPosition().getY()) != Terrain.EndLine){
//			System.out.println(i++);
			i++;
//			System.out.println(v.getPosition()+" "+v.getDirection()+" "+v.getVitesse());
			trajet.add(new Vecteur(v.getPosition().getX(),v.getPosition().getY()));
			Commande com = s.getCommande();
			v.drive(com);
			update();
			record.add(com);
			trajet.add(new Vecteur(v.getPosition().getX(),v.getPosition().getY()));
		}
		System.out.println(i);
		return i;
	}
	
	public ArrayList<Vecteur> getList(){
			return trajet;
	}
	
	public ArrayList<Commande> getRecord(){
		     return record;
	}
	
	@Override
	public void add(UpdateEventListener listener) {
		list.add(listener);
		
	}
	
	@Override
	public void update() {
		for(UpdateEventListener listener : list)
				listener.manageUpdate();
		
	}
	

}

