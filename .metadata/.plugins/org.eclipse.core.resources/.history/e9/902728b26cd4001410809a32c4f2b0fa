package main;

import geometrie.Vecteur;

import java.awt.Dimension;
import java.io.IOException;

import javax.swing.JFrame;

import dijkstra.Dijkstra;
import simulation.Simulation;
import strategy.Strategy;
import strategy.StrategyArrivee;
import strategy.StrategyOP;
import strategy.StrategyPointToPoint;
import strategy.StrategyPrudente;
import strategy.StrategyRadarDijkstra;
import strategy.StrategySelector;
import strategy.selector.SelectorArrivee;
import strategy.selector.SelectorDijkstra;
import strategy.selector.SelectorOP;
import strategy.selector.SelectorPointToPoint;
import strategy.selector.SelectorPrudent;
import Circuit.Circuit;
import Circuit.CircuitFactoryFromFile;
import IHM.CircuitObserver;
import IHM.TrajetObserver;
import IHM.VoitureObserver;
import IHM.Swing.IHMSwing;
import Radar.Radar;
import Radar.RadarDijkstra;
import Voiture.Voiture;
import Voiture.VoitureException;
import Voiture.VoitureFactory;

public class MainIHM {
	public static void main(String[] args) throws VoitureException, IOException {
		
		//Circuit  circuit = CircuitFactoryFromFile.build(new FileInputStream("1_safe.trk"));
		//IHMSwing ihm = new IHMSwing();	
		//ihm.add(new CircuitObserver(circuit));
		//Fenetre fen = new Fenetre(ihm);
		
		String fichier = Fonctions.selectionnerCircuit();

		Circuit  circuit = CircuitFactoryFromFile.build("Tracks/" + fichier);
		
		Voiture v = VoitureFactory.build(circuit.getPointDepart(), circuit.getDirectionDepart());
		
		//----------------------------------------------SELECTOR---------------------------------------------------------
		
		Dijkstra dij =  new Dijkstra(circuit) ;
		Radar r = new RadarDijkstra(v, circuit, dij.getMatrice());
		Strategy sDij = new StrategyRadarDijkstra(v, r);
		
		Vecteur[] tabVec = {new Vecteur(389.0,714.0)};
		Strategy sP2P = new StrategyPointToPoint(circuit, v, tabVec, dij.getMatrice());
		
		Strategy endLine = new StrategyArrivee(circuit, v);
		
		//ihm.add(new RadarObserver(v,r));
		Strategy OP = new StrategyOP(v,r);
		
		Strategy prudente = new StrategyPrudente();
		
		StrategySelector s = new StrategySelector();
		s.add(prudente, new SelectorPrudent(v, circuit));
		s.add(endLine, new SelectorArrivee(circuit, v));
		s.add(sP2P, new SelectorPointToPoint(circuit, v, tabVec));
		s.add(OP,new SelectorOP());
		s.add(sDij, new SelectorDijkstra());
		
		//-----------------------------------------------------------------------------------------------------------------
		final Simulation sim = new Simulation (circuit, v, s);
		
//		JFrame fen = new JFrame();
//		fen.setLocation(576, 28);

//		IHMSwing ihm = new IHMSwing();
//		ihm.add(new CircuitObserver(circuit));
		
		
//		ihm.add(new VoitureObserver(v));
		//ihm.add(new VoiturePerso(v, "aaa", 20,20));
//		ihm.add(new TrajetObserver(v));
//		sim.add(ihm);
		
//		ihm.setPreferredSize(new Dimension(768,1024));
//		fen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//		fen.setContentPane(ihm);
//		fen.setVisible(true);
//		fen.pack();
		
		sim.bob();
		
//		Thread t = new Thread(){
//		public void run(){
//			try{
//				sim.play();
//			} catch (VoitureException e1){
//				e1.printStackTrace();
//			}
//		}};
//		t.start();
	}
}
